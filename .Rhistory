plot<-ggplot(timeset,aes(x=year,y=0))
plot<-plot+geom_segment(aes(y=0,yend=y,xend=year))
plot<-plot+geom_text(aes(y=ytext,label=paste(text, "\n", labelDate, sep=" ")),size=2.5,vjust=-.5)# add dates here
plot<-plot+geom_point(aes(y=y))
plot<-plot+scale_y_continuous(limits=c(-2.5,2))
plot<-plot+geom_hline(y=0,size=1.5,color='orange')   #draw a horizontal line
# this adds arrow, kinda ugly
plot<-plot+geom_segment(x=2013.2,xend=2013.5,y=.1,yend=0,color='orange',size=1.5)+
geom_segment(x=2013.2,xend=2013.5,y=-.1,yend=0,color='orange',size=1.5) #drawing the actual arrow
plot<-plot+opts(axis.text.y =theme_blank(),
title='A Schumwinger Decade',
panel.background = theme_blank(),
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank(),
panel.border = theme_blank(),
axis.ticks = theme_blank(),
axis.text.x = theme_blank()
)
plot<-plot+ylab('')+xlab('')
plot <- plot
print(plot)
plot<-ggplot(timeset,aes(x=year,y=0))
plot<-plot+geom_segment(aes(y=0,yend=y,xend=year))
plot<-plot+geom_text(aes(y=ytext,label=paste(text, "\n", labelDate, sep=" ")),size=2.5,vjust=-.5)# add dates here
plot<-plot+geom_point(aes(y=y))
plot<-plot+scale_y_continuous(limits=c(-2.5,2))
plot<-plot+geom_hline(y=0,size=1.5,color='orange')   #draw a horizontal line
# this adds arrow, kinda ugly
plot<-plot+geom_segment(x=2013.2,xend=2013.45,y=.1,yend=0,color='orange',size=1.5)+
geom_segment(x=2013.2,xend=2013.45,y=-.1,yend=0,color='orange',size=1.5) #drawing the actual arrow
plot<-plot+opts(axis.text.y =theme_blank(),
title='A Schumwinger Decade',
panel.background = theme_blank(),
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank(),
panel.border = theme_blank(),
axis.ticks = theme_blank(),
axis.text.x = theme_blank()
)
plot<-plot+ylab('')+xlab('')
plot <- plot
print(plot)
plot<-ggplot(timeset,aes(x=year,y=0))
plot<-plot+geom_segment(aes(y=0,yend=y,xend=year))
plot<-plot+geom_text(aes(y=ytext,label=paste(text, "\n", labelDate, sep=" ")),size=2.5,vjust=-.5)# add dates here
plot<-plot+geom_point(aes(y=y))
plot<-plot+scale_y_continuous(limits=c(-2.5,2))
plot<-plot+geom_hline(y=0,size=1.5,color='orange')   #draw a horizontal line
# this adds arrow, kinda ugly
plot<-plot+geom_segment(x=2013.2,xend=2013.48,y=.1,yend=0,color='orange',size=1.5)+
geom_segment(x=2013.2,xend=2013.48,y=-.1,yend=0,color='orange',size=1.5) #drawing the actual arrow
plot<-plot+opts(axis.text.y =theme_blank(),
title='A Schumwinger Decade',
panel.background = theme_blank(),
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank(),
panel.border = theme_blank(),
axis.ticks = theme_blank(),
axis.text.x = theme_blank()
)
plot<-plot+ylab('')+xlab('')
plot <- plot
print(plot)
plot<-ggplot(timeset,aes(x=year,y=0))
plot<-plot+geom_segment(aes(y=0,yend=y,xend=year))
plot<-plot+geom_text(aes(y=ytext,label=paste(text, "\n", labelDate, sep=" ")),size=2.5,vjust=-.5)# add dates here
plot<-plot+geom_point(aes(y=y))
plot<-plot+scale_y_continuous(limits=c(-2.5,2))
plot<-plot+geom_hline(y=0,size=1.5,color='orange')   #draw a horizontal line
# this adds arrow, kinda ugly
plot<-plot+geom_segment(x=2013.2,xend=2013.49,y=.1,yend=0,color='orange',size=1.5)+
geom_segment(x=2013.2,xend=2013.49,y=-.1,yend=0,color='orange',size=1.5) #drawing the actual arrow
plot<-plot+opts(axis.text.y =theme_blank(),
title='A Schumwinger Decade',
panel.background = theme_blank(),
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank(),
panel.border = theme_blank(),
axis.ticks = theme_blank(),
axis.text.x = theme_blank()
)
plot<-plot+ylab('')+xlab('')
plot <- plot
print(plot)
plot<-ggplot(timeset,aes(x=year,y=0))
plot<-plot+geom_segment(aes(y=0,yend=y,xend=year))
plot<-plot+geom_text(aes(y=ytext,label=paste(text, "\n", labelDate, sep=" ")),size=2.5,vjust=-.5)# add dates here
plot<-plot+geom_point(aes(y=y))
plot<-plot+scale_y_continuous(limits=c(-2.5,2))
plot<-plot+geom_hline(y=0,size=1.5,color='orange')   #draw a horizontal line
# this adds arrow, kinda ugly
plot<-plot+geom_segment(x=2013.2,xend=2013.49,y=.1,yend=0,color='orange',size=1.5)+
geom_segment(x=2013.2,xend=2013.49,y=-.1,yend=0,color='orange',size=1.5) #drawing the actual arrow
plot<-plot+opts(axis.text.y =theme_blank(),
title='A Schumwinger Decade',
panel.background = theme_blank(),
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank(),
panel.border = theme_blank(),
axis.ticks = theme_blank(),
axis.text.x = theme_blank()
)
plot<-plot+opts(plot.margin = unit(c(1,1,3,1), "cm")
plot<-plot+ylab('')+xlab('')
plot <- plot
print(plot)
plot<-ggplot(timeset,aes(x=year,y=0))
plot<-plot+geom_segment(aes(y=0,yend=y,xend=year))
plot<-plot+geom_text(aes(y=ytext,label=paste(text, "\n", labelDate, sep=" ")),size=2.5,vjust=-.5)# add dates here
plot<-plot+geom_point(aes(y=y))
plot<-plot+scale_y_continuous(limits=c(-2.5,2))
plot<-plot+geom_hline(y=0,size=1.5,color='orange')   #draw a horizontal line
# this adds arrow, kinda ugly
plot<-plot+geom_segment(x=2013.2,xend=2013.49,y=.1,yend=0,color='orange',size=1.5)+
geom_segment(x=2013.2,xend=2013.49,y=-.1,yend=0,color='orange',size=1.5) #drawing the actual arrow
plot<-plot+opts(axis.text.y =theme_blank(),
title='A Schumwinger Decade',
panel.background = theme_blank(),
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank(),
panel.border = theme_blank(),
axis.ticks = theme_blank(),
axis.text.x = theme_blank()
)
plot<-plot+ylab('')+xlab('')
plot <- plot
print(plot)
3^4
4^3
list <- c(2,2,2,2,2)
mean(list)
sd(list)
x <- c(.3,.2,.1,.2,.1,.1)
quantile(x)
?quantile
?as.matrix
a <- matrix(c(1,2,2,5),2,2)
a
b <- matrix(c(-1,1),2,1)
b
c <- matrix(c(3,0),2,1)
c
a*b
x <- a*b
a*a
b*c
d <- matrix(c(1,3),2,1)
d
d+c
?mean
mean(c(80,125,140,85))
sd?
?sd
sd(c(1,2,3,4,5))
sqrt(2)
sqrt(15)
mean(c(1,2,3,4,5))
3/2
-1-1
4/3
m <- matrix(c(26,-36,18,-25),2,2)
m
m <- matrix(c(26,18,-36,-25),2,2)
m
m*m*m*m
m^4
a1 <- matrix(c(4,3,3,2))
a1
a1 <- matrix(c(4,3,3,2),2,2)
a1
b <- matrix(c(-1,0,0,2),2,2)
b
a <- matrix(c(-2,3,3,-4),2,2)
a
a1*b*a
m2 < - a1*b*a
m2 <- a1*b*a
m2
m2^4
m2*m2*m2*m2
s <- sum(c(1,2,3,4,5,6))
s
7*3.5
4.5*6
3.5/2
1.75*6
s <- sum(c(1,2,3,4,5,6,7,8,9,10))
s
11*5
10*6
10*2.5
install.packages("XLConnect")
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
library("XLConnectJars", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
detach("package:XLConnect", unload=TRUE)
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
install.packages("XLConnectJars")
library("XLConnectJars", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
remove.packages("XLConnectJars")
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
detach("package:XLConnect", unload=TRUE)
remove.packages("XLConnect")
install.packages("XLConnect")
library("XLConnectJars", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
table(StC$Index)
9.49+4.99+14.98+28.49
70629+775+316+411+1064-349
library(boston)
library(MASS)
head(boston)
head(Boston)
str(Boston)
adjustAnswer = function(score) {
threshold = 0.03
if(score < threshold) {
return (0)
}
candidate = round(score*2)/2
if(abs(candidate - score) < threshold) {
return (candidate)
}
return (score)
}
prepareFormula = function(useLogTransform) {
polyOrder = 2
# we might try different formulas for log transform and without it
if(useLogTransform) {
#formula for log transformation
formula = as.formula(
total ~ . # +
# log polynomials for total subs
#poly(log(1+total_2008_2009), polyOrder) +
#poly(log(1+total_2009_2010), polyOrder) +
#poly(log(1+total_2010_2011), polyOrder) +
#poly(log(1+total_2011_2012), polyOrder) +
#poly(log(1+total_2012_2013), polyOrder) +
#poly(log(1+total_2013_2014), polyOrder) +
# log polynomials for no seats
#poly(log(1+no.seats_2008_2009), polyOrder) +
#poly(log(1+no.seats_2009_2010), polyOrder) +
#poly(log(1+no.seats_2010_2011), polyOrder) +
#poly(log(1+no.seats_2011_2012), polyOrder) +
#poly(log(1+no.seats_2012_2013), polyOrder) +
#poly(log(1+no.seats_2013_2014), polyOrder) +
# log polynomials for prive levels
#poly(log(1+price.level_2008_2009), polyOrder) +
#poly(log(1+price.level_2009_2010), polyOrder) +
#poly(log(1+price.level_2010_2011), polyOrder) +
#poly(log(1+price.level_2011_2012), polyOrder) +
#poly(log(1+price.level_2012_2013), polyOrder) +
#poly(log(1+price.level_2013_2014), polyOrder)
)
} else {
# regular case
formula = as.formula(
total ~ .
#+
# polynomials for total subs in last 3 years
#poly(log(1+total_2010_2011), polyOrder) +
#poly(log(1+total_2011_2012), polyOrder) +
#poly(log(1+total_2012_2013), polyOrder) +
#poly(log(1+total_2013_2014), polyOrder) +
# log polynomials for total subs in last 3 years
#poly(log(1+no.seats_2010_2011), polyOrder) +
#poly(log(1+no.seats_2011_2012), polyOrder) +
#poly(log(1+no.seats_2012_2013), polyOrder) +
#poly(log(1+no.seats_2013_2014), polyOrder) +
#poly(log(1+price.level_2010_2011), polyOrder) +
#poly(log(1+price.level_2011_2012), polyOrder) +
#poly(log(1+price.level_2012_2013), polyOrder) +
#poly(log(1+price.level_2013_2014), polyOrder)
# intercations between price levels and total_subscriptions
#poly(price.level_2011_2012*total_2011_2012, polyOrder) +
#poly(price.level_2012_2013*total_2012_2013, polyOrder) +
#poly(price.level_2013_2014*total_2013_2014, polyOrder) +
#poly(log(1+no.seats_2010_2011*total_2010_2011), polyOrder) +
#poly(log(1+no.seats_2011_2012*total_2011_2012), polyOrder) +
#poly(log(1+no.seats_2012_2013*total_2012_2013), polyOrder) +
#poly(log(1+no.seats_2013_2014*total_2013_2014), polyOrder) +
#poly(log(1+price.level_2010_2011*total_2010_2011), polyOrder) +
#poly(log(1+price.level_2011_2012*total_2011_2012), polyOrder) +
#poly(log(1+price.level_2012_2013*total_2012_2013), polyOrder) +
#poly(log(1+price.level_2013_2014*total_2013_2014), polyOrder)
# intercations between no.seats and price_levels
#poly(price.level_2011_2012*no.seats_2011_2012, polyOrder) +
#poly(price.level_2012_2013*no.seats_2012_2013, polyOrder) +
#poly(price.level_2013_2014*no.seats_2013_2014, polyOrder)
)
}
return (formula)
}
evaluateModel = function(predictions, correctAnswers, useLogTransform) {
# compute validatation test error
answers = c()
error = 0;
for(i in 1:length(correctAnswers)) {
correctAnswer = correctAnswers[[i]]
answer = adjustAnswer(predictions[i])
answers = c(answers, answer)
if(useLogTransform) {
error = error + (answer-correctAnswer)^2
} else {
error = error + (log(answer+1)-log(correctAnswer+1))^2
}
}
error = error / length(correctAnswers)
error = sqrt(error)
print(paste("Error in validation set: ", error, " based on: ", length(correctAnswers), " samples"))
return (error)
}
normalizeStrings = function (data) {
tmp = sapply(data, tolower)
tmp = sapply(tmp, str_trim)
return (tmp)
}
includeLibraries = function() {
library(reshape2)
library(stringr)
}
setwd("~/Documents/towerProperty")
?scan
filenames <- c( tempfile(), tempfile() )
?tempfile
filenames
for( f in  filenames ){
cat("We wish you a Merry Christmas!\n\nBest regards\n", file=f)
}
## Replace Merry Christmas with Happy New Year
for( f in filenames ){
x <- readLines(f)
y <- gsub( "Merry Christmas", "Happy New Year", x )
cat(y, file=f, sep="\n")
}
x
f
## Review output
for( f in filenames ){
cat(readLines(f), sep="\n")
}
?readLines
setwd("~/Documents/towerProperty")
filenames
filenames <- c( "msTest.r", tempfile() )
filenames
for( f in  filenames ){
cat("We wish you a Merry Christmas!\n\nBest regards\n", file=f)
}
?cat
## Replace Merry Christmas with Happy New Year
for( f in filenames ){
x <- readLines(f)
y <- gsub( "Merry Christmas", "Happy New Year", x )
cat(y, file=f, sep="\n")
}
## Review output
for( f in filenames ){
cat(readLines(f), sep="\n")
}
filenames <- c( "msTest.r', tempfile() )
for( f in  filenames ){
cat("We wish you a Merry Christmas!\n\nBest regards\n", file=f)
}
## Replace Merry Christmas with Happy New Year
for( f in filenames ){
x <- readLines(f)
y <- gsub( "Merry Christmas", "/", x )
cat(y, file=f, sep="\n")
}
## Review output
for( f in filenames ){
cat(readLines(f), sep="\n")
}
for( f in  filenames ){
cat("We wish you a Merry Christmas!\n\nBest regards\n", file=f)
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "Merry Christmas", "/", x )
cat(y, file=f, sep="\n")
}
for( f in filenames ){
cat(readLines(f), sep="\n")
}
for( f in  filenames ){
cat("We wish you a \\!\n\nBest regards\n", file=f)
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in  filenames ){
cat("We wish you a \\!\n\nBest regards\n", file=f)
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in filenames ){
cat(readLines(f), sep="\n")
}
for( f in  filenames ){
cat("We wish you a \\!\n\nBest regards\n", file=f)
}
for( f in  filenames ){
cat("We wish you a foo\\foo!\n\nBest regards\n", file=f)
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in  filenames ){
cat("We wish you a foo\\\foo!\n\nBest regards\n", file=f)
}
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
readLines(msTest.r)
readLines("msTest.r"")
readLines("msTest.r)
readLines("msTest.r")
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
readLines("msTest.r")
x <- readLines("msTest.r")
y <- gsub( "\\", "/", x )
y <- gsub( "\\\", "/", x )
cat(readLines(msTest), sep="\n")
x <- readLines("msTest.r")
y <- gsub( "\\\", "/", x )
cat(readLines(msTest), sep="\n")
cat(readLines("msTest.r"), sep="\n")
x <- readLines("msTest.r")
y <- gsub( "\\\", "/", x )
cat(y, file="msTest.r", sep="\n")
cat(y, file="msTest.r", sep="\n")
x <- readLines("msTest.r")
y <- gsub( "\\\", "Z", x )
x <- readLines("msTest.r")
y <- gsub( "\\\", "Z", x )
y <- gsub( "\\\", "Z", x )
y <- gsub( "\\\", "zz", x )
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
x <- readLines("msTest.r")
y <- gsub( "\\\", "zz", x )
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
for( f in filenames ){
x <- readLines(f)
y <- gsub( "\\", "/", x )
cat(y, file=f, sep="\n")
}
for( f in filenames ){
cat(readLines(f), sep="\n")
}
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
filenames <- c( "msTest.r', tempfile() )
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
setwd("~/Documents/towerProperty")
## Create two text files with content
filenames <- c( "msTest.r', tempfile() )
for( f in  filenames ){
cat("We wish you a foo\\\\foo!\n\nBest regards\n", file=f)
}
filenames <- c( "msTest.r', tempfile() )
filenames <- c( "msTest.r', tempfile() )
filenames <- c( "msTest.r', tempfile() )
setwd("~/Documents/towerProperty")
