plot<-plot+opts(plot.margin = unit(c(1,1,3,1), "cm")
plot<-plot+ylab('')+xlab('')
plot <- plot
print(plot)
plot<-ggplot(timeset,aes(x=year,y=0))
plot<-plot+geom_segment(aes(y=0,yend=y,xend=year))
plot<-plot+geom_text(aes(y=ytext,label=paste(text, "\n", labelDate, sep=" ")),size=2.5,vjust=-.5)# add dates here
plot<-plot+geom_point(aes(y=y))
plot<-plot+scale_y_continuous(limits=c(-2.5,2))
plot<-plot+geom_hline(y=0,size=1.5,color='orange')   #draw a horizontal line
# this adds arrow, kinda ugly
plot<-plot+geom_segment(x=2013.2,xend=2013.49,y=.1,yend=0,color='orange',size=1.5)+
geom_segment(x=2013.2,xend=2013.49,y=-.1,yend=0,color='orange',size=1.5) #drawing the actual arrow
plot<-plot+opts(axis.text.y =theme_blank(),
title='A Schumwinger Decade',
panel.background = theme_blank(),
panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank(),
panel.border = theme_blank(),
axis.ticks = theme_blank(),
axis.text.x = theme_blank()
)
plot<-plot+ylab('')+xlab('')
plot <- plot
print(plot)
3^4
4^3
list <- c(2,2,2,2,2)
mean(list)
sd(list)
x <- c(.3,.2,.1,.2,.1,.1)
quantile(x)
?quantile
?as.matrix
a <- matrix(c(1,2,2,5),2,2)
a
b <- matrix(c(-1,1),2,1)
b
c <- matrix(c(3,0),2,1)
c
a*b
x <- a*b
a*a
b*c
d <- matrix(c(1,3),2,1)
d
d+c
?mean
mean(c(80,125,140,85))
sd?
?sd
sd(c(1,2,3,4,5))
sqrt(2)
sqrt(15)
mean(c(1,2,3,4,5))
3/2
-1-1
4/3
m <- matrix(c(26,-36,18,-25),2,2)
m
m <- matrix(c(26,18,-36,-25),2,2)
m
m*m*m*m
m^4
a1 <- matrix(c(4,3,3,2))
a1
a1 <- matrix(c(4,3,3,2),2,2)
a1
b <- matrix(c(-1,0,0,2),2,2)
b
a <- matrix(c(-2,3,3,-4),2,2)
a
a1*b*a
m2 < - a1*b*a
m2 <- a1*b*a
m2
m2^4
m2*m2*m2*m2
s <- sum(c(1,2,3,4,5,6))
s
7*3.5
4.5*6
3.5/2
1.75*6
s <- sum(c(1,2,3,4,5,6,7,8,9,10))
s
11*5
10*6
10*2.5
install.packages("XLConnect")
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
library("XLConnectJars", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
detach("package:XLConnect", unload=TRUE)
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
install.packages("XLConnectJars")
library("XLConnectJars", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
remove.packages("XLConnectJars")
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
detach("package:XLConnect", unload=TRUE)
remove.packages("XLConnect")
install.packages("XLConnect")
library("XLConnectJars", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
library("XLConnect", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/2.14/Resources/library")
table(StC$Index)
9.49+4.99+14.98+28.49
70629+775+316+411+1064-349
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 8
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 8
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
geo = read.csv('data/geo.account.csv',colClasses='character')
rawData$geo <- geo
str(rawData$geo)
data <- rawData
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 8
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 8
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
summary(gbm.orch)
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 8
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
depth = 6
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 6
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 6
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
geo = read.csv('data/geo.account.csv',colClasses='character')
rawData$geo <- geo
data <- rawData
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 6
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
catGeo <- c("State", "City") # categorical variables
numGeo <- c("Lat", "Lon") # numeric variables
data$geoFactors = data$geo[, c("account.id", catGeo)]
data$geoFactors[catGeo] = sapply(data$geoFactors[catGeo], as.factor)
data$geoNum = data$geo[, c("account.id", numGeo)]
geo = read.csv('data/geo.account.csv',colClasses='character')
rawData$geo <- geo
data <- rawData
data$geoFactors = data$geo[, c("account.id", catGeo)]
data$geoFactors[catGeo] = sapply(data$geoFactors[catGeo], as.factor)
data$geoNum = data$geo[, c("account.id", numGeo)]
numGeo <- c("Lat", "Long") # numeric variables
data$geoFactors = data$geo[, c("account.id", catGeo)]
data$geoFactors[catGeo] = sapply(data$geoFactors[catGeo], as.factor)
data$geoNum = data$geo[, c("account.id", numGeo)]
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 6
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
summary(gbm.orch)
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 6
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
# path to kaggle data and other files
#setwd("C:\\Users\\mlewo_000\\Documents\\GitHub\\https---github.com-MatthewSchumwinger-towerProperty\\towerProperty")
setwd("~/Documents/towerProperty") # Matt's wd path
source("config.r")
source("helpers.r")
source("data.r")
library(gbm)
setConfigForMyEnvironment() # special helper function for Matt's environment
validationRatio = 0.15
filter = "199|200|price|add_no|MOZART|ROSSINI|conc_missed|add_tickets|section_2013_2014|add_donated.2013|multiple.subs|package|billing.city|section|location|State|City"
useLogTransform = FALSE
trees = 4000
bagfrac = 0.5
shrinkage = .001
depth = 6
includeLibraries()
rawData = readData(useLogTransform)
# for some reasom gbm is not picking that up in the function
polyOrder = 2
formula = prepareFormula(useLogTransform)
seeds = c(234294, 340549, 879138, 188231, 646946, 160318, 853181, 551724, 398728, 323126)
testError = 0
for(seed in seeds) {
set.seed(seed)
data = preparePredictors(rawData, filter, validationRatio)
#  data = cleanData(data)
gbm.orch = gbm(formula, data = data$trainSet, distribution = "gaussian",
bag.fraction = bagfrac, shrinkage = shrinkage, n.trees = trees, interaction.depth = depth)
summary(gbm.orch)
gbm.boost = predict(gbm.orch , newdata=data$testSet, n.trees=trees)
testError = testError + evaluateModel(gbm.boost, data$testAnswers, useLogTransform)
}
tries = length(seeds)
print(paste("Final test error=", testError / tries, " based on ", tries, " tries"))
summary(gbm.orch)
